

Microchip Technology PIC18 LITE Macro Assembler V1.41 build -162212810 
                                                                                               Sun Oct 15 23:26:16 2017

Microchip Technology Omniscient Code Generator v1.41 (Free mode) build 201701250102
     1                           	processor	18F25K22
     2                           	fnconf	rparam,??,?,0
     3                           	opt	pw 120
     4                           	opt	lm
     5                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     6                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1,noexec
     7                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,noexec
     8                           	psect	text0,global,reloc=2,class=CODE,delta=1
     9                           	psect	text1,global,reloc=2,class=CODE,delta=1
    10                           	psect	intcode,global,reloc=2,class=CODE,delta=1
    11                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
    12                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
    13                           	psect	temp,global,ovrld,common,class=COMRAM,space=1,delta=1
    14  0000                     
    15                           ; Version 1.41
    16                           ; Generated 25/01/2017 GMT
    17                           ; 
    18                           ; Copyright Â© 2017, Microchip Technology Inc. and its subsidiaries ("Microchip")
    19                           ; All rights reserved.
    20                           ; 
    21                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    22                           ; 
    23                           ; Redistribution and use in source and binary forms, with or without modification, are
    24                           ; permitted provided that the following conditions are met:
    25                           ; 
    26                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    27                           ;        conditions and the following disclaimer.
    28                           ; 
    29                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    30                           ;        of conditions and the following disclaimer in the documentation and/or other
    31                           ;        materials provided with the distribution.
    32                           ; 
    33                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    34                           ;        software without specific prior written permission.
    35                           ; 
    36                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    37                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    38                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    39                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    40                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    41                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    42                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    43                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    44                           ; 
    45                           ; 
    46                           ; Code-generator required, PIC18F25K22 Definitions
    47                           ; 
    48                           ; SFR Addresses
    49  0000                     _ANSELC	set	3898
    50  0000                     _PORTBbits	set	3969
    51  0000                     _LATCbits	set	3979
    52  0000                     _INTCON	set	4082
    53  0000                     _TRISB	set	3987
    54  0000                     _TRISC	set	3988
    55  0000                     _LATC	set	3979
    56  0000                     _PEIE	set	32662
    57  0000                     _GIE	set	32663
    58  0000                     _RBIE	set	32659
    59  0000                     _RBIF	set	32656
    60  0000                     _RBIP	set	32648
    61  0000                     _IOCB7	set	31511
    62  0000                     _IOCB6	set	31510
    63  0000                     _IOCB5	set	31509
    64  0000                     _IOCB4	set	31508
    65                           
    66                           ; #config settings
    67  0000                     
    68                           	psect	cinit
    69  0000D6                     __pcinit:
    70                           	opt stack 0
    71  0000D6                     start_initialization:
    72                           	opt stack 0
    73  0000D6                     __initialization:
    74                           	opt stack 0
    75                           
    76                           ; Clear objects allocated to COMRAM (1 bytes)
    77  0000D6  6A10               	clrf	__pbssCOMRAM& (0+255),c
    78  0000D8                     end_of_initialization:
    79                           	opt stack 0
    80  0000D8                     __end_of__initialization:
    81                           	opt stack 0
    82  0000D8  9011               	bcf	int$flags,0,c	;clear compiler interrupt flag (level 1)
    83  0000DA  9211               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
    84  0000DC  0100               	movlb	0
    85  0000DE  EF71  F000         	goto	_main	;jump to C main() function
    86                           
    87                           	psect	bssCOMRAM
    88  000010                     __pbssCOMRAM:
    89                           	opt stack 0
    90  000010                     _i:
    91                           	opt stack 0
    92  000010                     	ds	1
    93                           
    94                           	psect	cstackCOMRAM
    95  000001                     __pcstackCOMRAM:
    96                           	opt stack 0
    97  000001                     ??_isr:
    98                           
    99                           ; 1 bytes @ 0x0
   100  000001                     	ds	15
   101  000010                     
   102                           ; 1 bytes @ 0xF
   103 ;;
   104 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
   105 ;;
   106 ;; *************** function _main *****************
   107 ;; Defined at:
   108 ;;		line 21 in file "main.c"
   109 ;; Parameters:    Size  Location     Type
   110 ;;		None
   111 ;; Auto vars:     Size  Location     Type
   112 ;;		None
   113 ;; Return value:  Size  Location     Type
   114 ;;                  1    wreg      void 
   115 ;; Registers used:
   116 ;;		wreg, status,2, cstack
   117 ;; Tracked objects:
   118 ;;		On entry : 0/0
   119 ;;		On exit  : 0/0
   120 ;;		Unchanged: 0/0
   121 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
   122 ;;      Params:         0       0       0       0       0       0       0
   123 ;;      Locals:         0       0       0       0       0       0       0
   124 ;;      Temps:          0       0       0       0       0       0       0
   125 ;;      Totals:         0       0       0       0       0       0       0
   126 ;;Total ram usage:        0 bytes
   127 ;; Hardware stack levels required when called:    2
   128 ;; This function calls:
   129 ;;		_Setup
   130 ;; This function is called by:
   131 ;;		Startup code after reset
   132 ;; This function uses a non-reentrant model
   133 ;;
   134                           
   135                           	psect	text0
   136  0000E2                     __ptext0:
   137                           	opt stack 0
   138  0000E2                     _main:
   139                           	opt stack 29
   140                           
   141                           ;main.c: 22: Setup();
   142                           
   143                           ;incstack = 0
   144  0000E2  EC5A  F000         	call	_Setup	;wreg free
   145  0000E6                     l39:
   146  0000E6  D7FF               	goto	l39
   147  0000E8                     __end_of_main:
   148                           	opt stack 0
   149                           
   150 ;; *************** function _Setup *****************
   151 ;; Defined at:
   152 ;;		line 29 in file "main.c"
   153 ;; Parameters:    Size  Location     Type
   154 ;;		None
   155 ;; Auto vars:     Size  Location     Type
   156 ;;		None
   157 ;; Return value:  Size  Location     Type
   158 ;;                  1    wreg      void 
   159 ;; Registers used:
   160 ;;		wreg, status,2
   161 ;; Tracked objects:
   162 ;;		On entry : 0/0
   163 ;;		On exit  : 0/0
   164 ;;		Unchanged: 0/0
   165 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
   166 ;;      Params:         0       0       0       0       0       0       0
   167 ;;      Locals:         0       0       0       0       0       0       0
   168 ;;      Temps:          0       0       0       0       0       0       0
   169 ;;      Totals:         0       0       0       0       0       0       0
   170 ;;Total ram usage:        0 bytes
   171 ;; Hardware stack levels used:    1
   172 ;; Hardware stack levels required when called:    1
   173 ;; This function calls:
   174 ;;		Nothing
   175 ;; This function is called by:
   176 ;;		_main
   177 ;; This function uses a non-reentrant model
   178 ;;
   179                           
   180                           	psect	text1
   181  0000B4                     __ptext1:
   182                           	opt stack 0
   183  0000B4                     _Setup:
   184                           	opt stack 29
   185                           
   186                           ;main.c: 30: LATC = 0b00000000;
   187                           
   188                           ;incstack = 0
   189  0000B4  0E00               	movlw	0
   190  0000B6  6E8B               	movwf	3979,c	;volatile
   191                           
   192                           ;main.c: 31: ANSELC = 0b00000000;
   193  0000B8  0E00               	movlw	0
   194  0000BA  010F               	movlb	15	; () banked
   195  0000BC  6F3A               	movwf	58,b	;volatile
   196                           
   197                           ;main.c: 32: TRISC = 0b00000000;
   198  0000BE  0E00               	movlw	0
   199  0000C0  6E94               	movwf	3988,c	;volatile
   200                           
   201                           ;main.c: 33: TRISB = 0b00010000;
   202  0000C2  0E10               	movlw	16
   203  0000C4  6E93               	movwf	3987,c	;volatile
   204                           
   205                           ; BSR set to: 15
   206                           ;main.c: 34: IOCB4 = 1;
   207  0000C6  8862               	bsf	3938,4,c	;volatile
   208                           
   209                           ; BSR set to: 15
   210                           ;main.c: 35: IOCB5 = 0;
   211  0000C8  9A62               	bcf	3938,5,c	;volatile
   212                           
   213                           ; BSR set to: 15
   214                           ;main.c: 36: IOCB6 = 0;
   215  0000CA  9C62               	bcf	3938,6,c	;volatile
   216                           
   217                           ; BSR set to: 15
   218                           ;main.c: 37: IOCB7 = 0;
   219  0000CC  9E62               	bcf	3938,7,c	;volatile
   220                           
   221                           ; BSR set to: 15
   222                           ;main.c: 38: RBIP = 1;
   223  0000CE  80F1               	bsf	intcon2,0,c	;volatile
   224                           
   225                           ;main.c: 39: INTCON = 0b11001000;
   226  0000D0  0EC8               	movlw	200
   227  0000D2  6EF2               	movwf	intcon,c	;volatile
   228                           
   229                           ; BSR set to: 15
   230  0000D4  0012               	return		;funcret
   231  0000D6                     __end_of_Setup:
   232                           	opt stack 0
   233                           intcon	equ	0xFF2
   234                           intcon2	equ	0xFF1
   235                           
   236 ;; *************** function _isr *****************
   237 ;; Defined at:
   238 ;;		line 44 in file "main.c"
   239 ;; Parameters:    Size  Location     Type
   240 ;;		None
   241 ;; Auto vars:     Size  Location     Type
   242 ;;		None
   243 ;; Return value:  Size  Location     Type
   244 ;;                  1    wreg      void 
   245 ;; Registers used:
   246 ;;		wreg, status,2, status,0
   247 ;; Tracked objects:
   248 ;;		On entry : 0/0
   249 ;;		On exit  : 0/0
   250 ;;		Unchanged: 0/0
   251 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
   252 ;;      Params:         0       0       0       0       0       0       0
   253 ;;      Locals:         0       0       0       0       0       0       0
   254 ;;      Temps:         15       0       0       0       0       0       0
   255 ;;      Totals:        15       0       0       0       0       0       0
   256 ;;Total ram usage:       15 bytes
   257 ;; Hardware stack levels used:    1
   258 ;; This function calls:
   259 ;;		Nothing
   260 ;; This function is called by:
   261 ;;		Interrupt level 2
   262 ;; This function uses a non-reentrant model
   263 ;;
   264                           
   265                           	psect	intcode
   266  000008                     __pintcode:
   267                           	opt stack 0
   268  000008                     _isr:
   269                           	opt stack 29
   270                           
   271                           ; BSR set to: 15
   272                           ;incstack = 0
   273  000008  8211               	bsf	btemp,1,c	;set compiler interrupt flag (level 2)
   274  00000A  CFFA F002          	movff	pclath,??_isr+1
   275  00000E  CFFB F003          	movff	pclatu,??_isr+2
   276  000012  CFE9 F004          	movff	fsr0l,??_isr+3
   277  000016  CFEA F005          	movff	fsr0h,??_isr+4
   278  00001A  CFE1 F006          	movff	fsr1l,??_isr+5
   279  00001E  CFE2 F007          	movff	fsr1h,??_isr+6
   280  000022  CFD9 F008          	movff	fsr2l,??_isr+7
   281  000026  CFDA F009          	movff	fsr2h,??_isr+8
   282  00002A  CFF3 F00A          	movff	prodl,??_isr+9
   283  00002E  CFF4 F00B          	movff	prodh,??_isr+10
   284  000032  CFF6 F00C          	movff	tblptrl,??_isr+11
   285  000036  CFF7 F00D          	movff	tblptrh,??_isr+12
   286  00003A  CFF8 F00E          	movff	tblptru,??_isr+13
   287  00003E  CFF5 F00F          	movff	tablat,??_isr+14
   288                           
   289                           ;main.c: 46: if(RBIF && RBIE){
   290  000042  B0F2               	btfsc	intcon,0,c	;volatile
   291  000044  A6F2               	btfss	intcon,3,c	;volatile
   292  000046  D016               	goto	i2l52
   293                           
   294                           ;main.c: 49: GIE=0;
   295  000048  9EF2               	bcf	intcon,7,c	;volatile
   296                           
   297                           ;main.c: 50: PEIE = 0;
   298  00004A  9CF2               	bcf	intcon,6,c	;volatile
   299                           
   300                           ;main.c: 51: RBIF = 0;
   301  00004C  90F2               	bcf	intcon,0,c	;volatile
   302                           
   303                           ;main.c: 52: RBIE = 0;
   304  00004E  96F2               	bcf	intcon,3,c	;volatile
   305                           
   306                           ;main.c: 54: LATCbits.LC1 = ~LATCbits.LC1;
   307  000050  A28B               	btfss	3979,1,c	;volatile
   308  000052  D002               	goto	i2u3_40
   309  000054  0E01               	movlw	1
   310  000056  D001               	goto	i2u3_46
   311  000058                     i2u3_40:
   312  000058  0E00               	movlw	0
   313  00005A                     i2u3_46:
   314  00005A  0AFF               	xorlw	255
   315  00005C  6E01               	movwf	??_isr& (0+255),c
   316  00005E  4601               	rlncf	??_isr,f,c
   317  000060  508B               	movf	3979,w,c	;volatile
   318  000062  1801               	xorwf	??_isr,w,c
   319  000064  0BFD               	andlw	-3
   320  000066  1801               	xorwf	??_isr,w,c
   321  000068  6E8B               	movwf	3979,c	;volatile
   322  00006A                     i2l49:
   323  00006A  B881               	btfsc	3969,4,c	;volatile
   324  00006C  D7FE               	goto	i2l49
   325                           
   326                           ;main.c: 59: RBIE = 1;
   327  00006E  86F2               	bsf	intcon,3,c	;volatile
   328                           
   329                           ;main.c: 60: GIE=1;
   330  000070  8EF2               	bsf	intcon,7,c	;volatile
   331                           
   332                           ;main.c: 61: PEIE = 1;
   333  000072  8CF2               	bsf	intcon,6,c	;volatile
   334  000074                     i2l52:
   335  000074  C00F  FFF5         	movff	??_isr+14,tablat
   336  000078  C00E  FFF8         	movff	??_isr+13,tblptru
   337  00007C  C00D  FFF7         	movff	??_isr+12,tblptrh
   338  000080  C00C  FFF6         	movff	??_isr+11,tblptrl
   339  000084  C00B  FFF4         	movff	??_isr+10,prodh
   340  000088  C00A  FFF3         	movff	??_isr+9,prodl
   341  00008C  C009  FFDA         	movff	??_isr+8,fsr2h
   342  000090  C008  FFD9         	movff	??_isr+7,fsr2l
   343  000094  C007  FFE2         	movff	??_isr+6,fsr1h
   344  000098  C006  FFE1         	movff	??_isr+5,fsr1l
   345  00009C  C005  FFEA         	movff	??_isr+4,fsr0h
   346  0000A0  C004  FFE9         	movff	??_isr+3,fsr0l
   347  0000A4  C003  FFFB         	movff	??_isr+2,pclatu
   348  0000A8  C002  FFFA         	movff	??_isr+1,pclath
   349  0000AC  9211               	bcf	btemp,1,c	;clear compiler interrupt flag (level 2)
   350  0000AE  0011               	retfie		f
   351  0000B0                     __end_of_isr:
   352                           	opt stack 0
   353  0000                     pclatu	equ	0xFFB
   354                           pclath	equ	0xFFA
   355                           tblptru	equ	0xFF8
   356                           tblptrh	equ	0xFF7
   357                           tblptrl	equ	0xFF6
   358                           tablat	equ	0xFF5
   359                           prodh	equ	0xFF4
   360                           prodl	equ	0xFF3
   361                           intcon	equ	0xFF2
   362                           intcon2	equ	0xFF1
   363                           fsr0h	equ	0xFEA
   364                           fsr0l	equ	0xFE9
   365                           fsr1h	equ	0xFE2
   366                           fsr1l	equ	0xFE1
   367                           fsr2h	equ	0xFDA
   368                           fsr2l	equ	0xFD9
   369                           pclatu	equ	0xFFB
   370                           pclath	equ	0xFFA
   371                           tblptru	equ	0xFF8
   372                           tblptrh	equ	0xFF7
   373                           tblptrl	equ	0xFF6
   374                           tablat	equ	0xFF5
   375                           prodh	equ	0xFF4
   376                           prodl	equ	0xFF3
   377                           intcon	equ	0xFF2
   378                           intcon2	equ	0xFF1
   379                           fsr0h	equ	0xFEA
   380                           fsr0l	equ	0xFE9
   381                           fsr1h	equ	0xFE2
   382                           fsr1l	equ	0xFE1
   383                           fsr2h	equ	0xFDA
   384                           fsr2l	equ	0xFD9
   385                           
   386                           	psect	rparam
   387  0000                     pclatu	equ	0xFFB
   388                           pclath	equ	0xFFA
   389                           tblptru	equ	0xFF8
   390                           tblptrh	equ	0xFF7
   391                           tblptrl	equ	0xFF6
   392                           tablat	equ	0xFF5
   393                           prodh	equ	0xFF4
   394                           prodl	equ	0xFF3
   395                           intcon	equ	0xFF2
   396                           intcon2	equ	0xFF1
   397                           fsr0h	equ	0xFEA
   398                           fsr0l	equ	0xFE9
   399                           fsr1h	equ	0xFE2
   400                           fsr1l	equ	0xFE1
   401                           fsr2h	equ	0xFDA
   402                           fsr2l	equ	0xFD9
   403                           
   404                           	psect	temp
   405  000011                     btemp:
   406                           	opt stack 0
   407  000011                     	ds	1
   408  0000                     int$flags	set	btemp
   409                           pclatu	equ	0xFFB
   410                           pclath	equ	0xFFA
   411                           tblptru	equ	0xFF8
   412                           tblptrh	equ	0xFF7
   413                           tblptrl	equ	0xFF6
   414                           tablat	equ	0xFF5
   415                           prodh	equ	0xFF4
   416                           prodl	equ	0xFF3
   417                           intcon	equ	0xFF2
   418                           intcon2	equ	0xFF1
   419                           fsr0h	equ	0xFEA
   420                           fsr0l	equ	0xFE9
   421                           fsr1h	equ	0xFE2
   422                           fsr1l	equ	0xFE1
   423                           fsr2h	equ	0xFDA
   424                           fsr2l	equ	0xFD9


Data Sizes:
    Strings     0
    Constant    0
    Data        0
    BSS         1
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           94     15      16
    BANK0           160      0       0
    BANK1           256      0       0
    BANK2           256      0       0
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           256      0       0

Pointer List with Targets:

    None.

Critical Paths under _main in COMRAM

    None.

Critical Paths under _isr in COMRAM

    None.

Critical Paths under _main in BANK0

    None.

Critical Paths under _isr in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _isr in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _isr in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _isr in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _isr in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _isr in BANK5

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 0     0      0       0
                              _Setup
 ---------------------------------------------------------------------------------
 (1) _Setup                                                0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 1
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (2) _isr                                                 15    15      0       0
                                              0 COMRAM    15    15      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 2
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _Setup

 _isr (ROOT)

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             5FF      0       0      16        0.0%
EEDATA             100      0       0       0        0.0%
BITBANK5           100      0       0      14        0.0%
BANK5              100      0       0      15        0.0%
BITBANK4           100      0       0      12        0.0%
BANK4              100      0       0      13        0.0%
BITBANK3           100      0       0      10        0.0%
BANK3              100      0       0      11        0.0%
BITBANK2           100      0       0       7        0.0%
BANK2              100      0       0       8        0.0%
BITBANK1           100      0       0       5        0.0%
BANK1              100      0       0       6        0.0%
BITBANK0            A0      0       0       3        0.0%
BANK0               A0      0       0       4        0.0%
BITCOMRAM           5E      0       0       0        0.0%
COMRAM              5E      F      10       1       17.0%
BITSFR_1             0      0       0     200        0.0%
SFR_1                0      0       0     200        0.0%
BITSFR               0      0       0     200        0.0%
SFR                  0      0       0     200        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0      10       9        0.0%
DATA                 0      0      10      17        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V1.41 build -162212810 
Symbol Table                                                                                   Sun Oct 15 23:26:16 2017

                      _i 0010                       l39 00E6             __CFG_CP0$OFF 000000  
           __CFG_CP1$OFF 000000             __CFG_CP2$OFF 000000             __CFG_CP3$OFF 000000  
                    _GIE 007F97             __CFG_CPB$OFF 000000             __CFG_CPD$OFF 000000  
                    _isr 0008             __CFG_FOSC$XT 000000             __CFG_LVP$OFF 000000  
                   ?_isr 0001                     _LATC 000F8B                     _PEIE 007F96  
                   _RBIE 007F93                     _RBIF 007F90                     _RBIP 007F88  
                   i2l52 0074                     i2l49 006A                     _main 00E2  
                   fsr0h 000FEA                     fsr1h 000FE2                     fsr2h 000FDA  
                   fsr0l 000FE9                     fsr1l 000FE1                     fsr2l 000FD9  
                   btemp 0011            __CFG_BORV$190 000000                     prodh 000FF4  
                   prodl 000FF3                     start 00B0            __CFG_IESO$OFF 000000  
           ___param_bank 000000                    ??_isr 0001                    ?_main 0001  
                  _IOCB4 007B14                    _IOCB5 007B15                    _IOCB6 007B16  
                  _IOCB7 007B17                    _TRISB 000F93                    _TRISC 000F94  
          __CFG_WRT0$OFF 000000            __CFG_WRT1$OFF 000000            __CFG_WRT2$OFF 000000  
          __CFG_WRT3$OFF 000000           __CFG_EBTR0$OFF 000000           __CFG_FCMEN$OFF 000000  
         __CFG_EBTR1$OFF 000000           __CFG_EBTR2$OFF 000000           __CFG_EBTR3$OFF 000000  
                  _Setup 00B4            __CFG_WRTB$OFF 000000            __CFG_WRTC$OFF 000000  
          __CFG_WRTD$OFF 000000           __CFG_EBTRB$OFF 000000       __CFG_MCLRE$EXTMCLR 000000  
         __CFG_BOREN$OFF 000000                    pclath 000FFA                    tablat 000FF5  
        __initialization 00D6             __end_of_main 00E8                   ??_main 0010  
          __activetblptr 000000                   ?_Setup 0001                   _ANSELC 000F3A  
         __CFG_WDTEN$OFF 000000                   _INTCON 000FF2                   i2u3_40 0058  
                 i2u3_46 005A           __CFG_XINST$OFF 000000                   tblptrh 000FF7  
                 tblptrl 000FF6                   tblptru 000FF8          __CFG_HFOFST$OFF 000000  
             __accesstop 0060  __end_of__initialization 00D8          __CFG_PBADEN$OFF 000000  
          ___rparam_used 000001           __pcstackCOMRAM 0001            __end_of_Setup 00D6  
                ??_Setup 0010          __CFG_PLLCFG$OFF 000000       __CFG_CCP2MX$PORTC1 000000  
     __CFG_CCP3MX$PORTB5 000000        __CFG_PRICLKEN$OFF 000000          __CFG_PWRTEN$OFF 000000  
                __Hparam 0000                  __Lparam 0000          __CFG_STVREN$OFF 000000  
                __pcinit 00D6                  __ramtop 0600                  __ptext0 00E2  
                __ptext1 00B4             __size_of_isr 00A8     end_of_initialization 00D8  
              _PORTBbits 000F81      start_initialization 00D6              __end_of_isr 00B0  
            __pbssCOMRAM 0010                __pintcode 0008           __size_of_Setup 0022  
               _LATCbits 000F8B         __CFG_WDTPS$32768 000000                 __Hrparam 0000  
               __Lrparam 0000        __CFG_P2BMX$PORTB5 000000            __size_of_main 0006  
               int$flags 0011                 intlevel2 0000        __CFG_T3CMX$PORTC0 000000  
